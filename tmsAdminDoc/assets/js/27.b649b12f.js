(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{201:function(t,a,n){"use strict";n.r(a);var s=n(0),e=Object(s.a)({},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"gitlab-ci"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci","aria-hidden":"true"}},[t._v("#")]),t._v(" Gitlab CI")]),t._v(" "),n("p",[t._v("Gitlab-CI 是 GitLab Continuous Integration（Gitlab持续集成）的简称。\n从Gitlab的8.0版本开始，gitlab就全面集成了Gitlab-CI,并且对所有项目默认开启。\n只要在项目仓库的根目录添加.gitlab-ci.yml文件，并且配置了Runner（运行器），那么每一次合并请求（MR）或者push都会触发CI pipeline，"),n("a",{attrs:{href:"https://fennay.github.io/gitlab-ci-cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("中文文档"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"gitlab-runner"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-runner","aria-hidden":"true"}},[t._v("#")]),t._v(" Gitlab-Runner")]),t._v(" "),n("h4",{attrs:{id:"安装gitlab-ci-multi-runner（linux）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装gitlab-ci-multi-runner（linux）","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装gitlab-ci-multi-runner（linux）")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加yum源")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.rpm.sh "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gitlab-ci-multi-runner\n")])])]),n("h4",{attrs:{id:"使用-gitlab-ci-multi-runner-注册-specific-runners"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-gitlab-ci-multi-runner-注册-specific-runners","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 gitlab-ci-multi-runner 注册 Specific Runners")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/4660406-23e31a052864a7a0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"runners.jpg"}})]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ gitlab-ci-multi-runner register\nRunning "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" system-mode.\n\nPlease enter the gitlab-ci coordinator URL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e.g. https://gitlab.com/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" 你的URL\n\nPlease enter the gitlab-ci token "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" this runner:\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" 你的Token\n\nPlease enter the gitlab-ci description "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" this runner:\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" 你对该runner的描述\n\nPlease enter the gitlab-ci tags "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" this runner "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("comma separated"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" 该runner的标签\n\nWhether to run untagged builds "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("true/false"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("false"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" 是否运行没有标记的项目（后期可以改）\n\nWhether to lock Runner to current project "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("true/false"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("false"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" 是否锁定只运行当前项目（后期可以改）\n\nRegistering runner"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". succeeded                     "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("runner")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("9e48baqx\n\nPlease enter the executor: parallels, docker+machine, ssh, virtualbox, docker-ssh+machine, kubernetes, docker, docker-ssh, shell:\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" 选择runner的类型（根据你的需求选择，我选择的shell，我的项目是node项目）\n\nRunner registered successfully. Feel "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" to start it, but "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" it's running already the config should be automatically reloaded"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),n("div",{staticClass:"warning custom-block"},[n("ol",[n("li",[t._v("首先你的项目中的 "),n("code",[t._v("getlab-runner.yml")]),t._v(" 文件中的命令需要的环境，你的runner所在的服务器是必须要搭好的，必须你需要执行 "),n("code",[t._v("npm install")]),t._v(" 和 "),n("code",[t._v("npm run build")]),t._v(" ，那你的服务器必须要有node环境；")]),t._v(" "),n("li",[t._v("runner的类型比较重要，你必须要清楚你需要一个什么类型的runner。比如，开始我是需要一个能够运行node项目的runner，但是网上的很多教程统一都是都选择docker，这个时候你电脑上必须要安装了docker才可以，因为这相当于在docker里面又安装了一个docker（docker in docker），所以对于我的需求来说，我选择shell就可以了；")]),t._v(" "),n("li",[t._v("通过Gitlab中某个项目的 "),n("code",[t._v("Settings")]),t._v(" 下的 "),n("code",[t._v("CI/CD Pipelines")]),t._v(" 按钮进入的页面中得到的URL和Token所注册的runner只服务于本项目，当你在其他项目的当前页面时，可以选择让这个runner为当前项目开启服务。")])])]),t._v(" "),n("h2",{attrs:{id:"配置-gitlab-runner-yml"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置-gitlab-runner-yml","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置 gitlab-runner.yml")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("mage: node:9.11.1\n\npages:\n cache:\n   paths:\n   - node_modules/\n\n script:\n - cnpm "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n - "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n - "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf /data/ftp/http/files/scfAdminDoc\n - "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" ./scfAdminDoc /data/ftp/http/files/\n artifacts:\n   paths:\n   - public\n only:\n - master\n")])])]),n("p",[t._v("具体配置见"),n("a",{attrs:{href:"https://fennay.github.io/gitlab-ci-cn/gitlab-ci-yaml.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"其他"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),n("h4",{attrs:{id:"代码推送到gitlab上之后，一直是pending状态，要等很久才pick到一个runner来执行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码推送到gitlab上之后，一直是pending状态，要等很久才pick到一个runner来执行","aria-hidden":"true"}},[t._v("#")]),t._v(" 代码推送到gitlab上之后，一直是pending状态，要等很久才pick到一个runner来执行")]),t._v(" "),n("p",[t._v("这个现象一般发生在本机注册了多个runner，之前的都删除了，只留下一个，但是当我们在gitlab管理平台移除了某个runner的时候，并没有完全删除记录，当执行的 "),n("code",[t._v("gitlab-ci-multi-runner list")]),t._v(" 的时候你会发现它仍然还在，如果需要彻底删除它，还应该这样做：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /etc/gitlab-runner\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你会看到config.toml文件，打开它并删除已有的那些runner记录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" config.toml\n")])])]),n("h4",{attrs:{id:"配置node环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置node环境","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置node环境")]),t._v(" "),n("ol",[n("li",[t._v("下载node-v9.11.1-linux-x64.tar.xz文件")]),t._v(" "),n("li",[t._v("例如放在 "),n("code",[t._v("/home")]),t._v(" 文件夹"),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入所在目录，解压")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xvf node-v9.11.1-linux-x64.tar.xz\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重命名文件夹")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" node-v9.11.1-linux-x64 nodejs\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 建立软链接，配置全局环境变量（源路径和目标路径为相对路径）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /home/nodejs/bin/npm /usr/local/bin/\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /home/nodejs/bin/node /usr/local/bin/\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查是否配置成功")]),t._v("\nnode -v\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" -v\n")])])])])]),t._v(" "),n("h4",{attrs:{id:"scp上上传"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#scp上上传","aria-hidden":"true"}},[t._v("#")]),t._v(" scp上上传")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 普通")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" ./public/* root@192.168.0.226:/data/ftp/http/files/\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" 源路径/源文件 用户名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("@服务器IP:目标路径\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 免密码")]),t._v("\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" sshpass\nsshpass -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("111111")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" ./public/* root@192.168.0.226:/data/ftp/http/files/\nsshpass -p 密码 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" 源路径/源文件 用户名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("@服务器IP:目标路径\n")])])]),n("p",[t._v("如果是下载，调换顺序")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" root@192.168.0.226:/data/ftp/http/files/ ./public/*\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" 用户名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("@服务器IP:目标路径 源路径/源文件\n")])])])])},[],!1,null,null,null);a.default=e.exports}}]);